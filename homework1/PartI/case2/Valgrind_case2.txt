==8987== Memcheck, a memory error detector
==8987== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==8987== Using Valgrind-3.14.0 and LibVEX; rerun with -h for copyright info
==8987== Command: ./case2
==8987== 
==8987== Conditional jump or move depends on uninitialised value(s)
==8987==    at 0x48BF029: vfprintf (vfprintf.c:1637)
==8987==    by 0x48C6605: printf (printf.c:33)
==8987==    by 0x109197: main (case2.c:11)
==8987== 
==8987== Use of uninitialised value of size 8
==8987==    at 0x48BAD1E: _itoa_word (_itoa.c:179)
==8987==    by 0x48BE5F3: vfprintf (vfprintf.c:1637)
==8987==    by 0x48C6605: printf (printf.c:33)
==8987==    by 0x109197: main (case2.c:11)
==8987== 
==8987== Conditional jump or move depends on uninitialised value(s)
==8987==    at 0x48BAD29: _itoa_word (_itoa.c:179)
==8987==    by 0x48BE5F3: vfprintf (vfprintf.c:1637)
==8987==    by 0x48C6605: printf (printf.c:33)
==8987==    by 0x109197: main (case2.c:11)
==8987== 
==8987== Conditional jump or move depends on uninitialised value(s)
==8987==    at 0x48BF213: vfprintf (vfprintf.c:1637)
==8987==    by 0x48C6605: printf (printf.c:33)
==8987==    by 0x109197: main (case2.c:11)
==8987== 
==8987== Conditional jump or move depends on uninitialised value(s)
==8987==    at 0x48BE75D: vfprintf (vfprintf.c:1637)
==8987==    by 0x48C6605: printf (printf.c:33)
==8987==    by 0x109197: main (case2.c:11)
==8987== 
0 1 2 3 4 5 6 7 8 31 
==8987== 
==8987== HEAP SUMMARY:
==8987==     in use at exit: 0 bytes in 0 blocks
==8987==   total heap usage: 1 allocs, 1 frees, 1,024 bytes allocated
==8987== 
==8987== All heap blocks were freed -- no leaks are possible
==8987== 
==8987== For counts of detected and suppressed errors, rerun with: -v
==8987== Use --track-origins=yes to see where uninitialised values come from
==8987== ERROR SUMMARY: 7 errors from 5 contexts (suppressed: 0 from 0)
